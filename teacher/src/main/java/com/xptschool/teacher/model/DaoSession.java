package com.xptschool.teacher.model;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xptschool.teacher.model.BeanBanner;
import com.xptschool.teacher.model.BeanClass;
import com.xptschool.teacher.model.BeanCourse;
import com.xptschool.teacher.model.BeanDeviceToken;
import com.xptschool.teacher.model.BeanMyClass;
import com.xptschool.teacher.model.BeanTeacher;
import com.xptschool.teacher.model.ContactParent;
import com.xptschool.teacher.model.ContactStudent;
import com.xptschool.teacher.model.ContactTeacher;
import com.xptschool.teacher.model.BeanChat;

import com.xptschool.teacher.model.BeanBannerDao;
import com.xptschool.teacher.model.BeanClassDao;
import com.xptschool.teacher.model.BeanCourseDao;
import com.xptschool.teacher.model.BeanDeviceTokenDao;
import com.xptschool.teacher.model.BeanMyClassDao;
import com.xptschool.teacher.model.BeanTeacherDao;
import com.xptschool.teacher.model.ContactParentDao;
import com.xptschool.teacher.model.ContactStudentDao;
import com.xptschool.teacher.model.ContactTeacherDao;
import com.xptschool.teacher.model.BeanChatDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig beanBannerDaoConfig;
    private final DaoConfig beanClassDaoConfig;
    private final DaoConfig beanCourseDaoConfig;
    private final DaoConfig beanDeviceTokenDaoConfig;
    private final DaoConfig beanMyClassDaoConfig;
    private final DaoConfig beanTeacherDaoConfig;
    private final DaoConfig contactParentDaoConfig;
    private final DaoConfig contactStudentDaoConfig;
    private final DaoConfig contactTeacherDaoConfig;
    private final DaoConfig beanChatDaoConfig;

    private final BeanBannerDao beanBannerDao;
    private final BeanClassDao beanClassDao;
    private final BeanCourseDao beanCourseDao;
    private final BeanDeviceTokenDao beanDeviceTokenDao;
    private final BeanMyClassDao beanMyClassDao;
    private final BeanTeacherDao beanTeacherDao;
    private final ContactParentDao contactParentDao;
    private final ContactStudentDao contactStudentDao;
    private final ContactTeacherDao contactTeacherDao;
    private final BeanChatDao beanChatDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        beanBannerDaoConfig = daoConfigMap.get(BeanBannerDao.class).clone();
        beanBannerDaoConfig.initIdentityScope(type);

        beanClassDaoConfig = daoConfigMap.get(BeanClassDao.class).clone();
        beanClassDaoConfig.initIdentityScope(type);

        beanCourseDaoConfig = daoConfigMap.get(BeanCourseDao.class).clone();
        beanCourseDaoConfig.initIdentityScope(type);

        beanDeviceTokenDaoConfig = daoConfigMap.get(BeanDeviceTokenDao.class).clone();
        beanDeviceTokenDaoConfig.initIdentityScope(type);

        beanMyClassDaoConfig = daoConfigMap.get(BeanMyClassDao.class).clone();
        beanMyClassDaoConfig.initIdentityScope(type);

        beanTeacherDaoConfig = daoConfigMap.get(BeanTeacherDao.class).clone();
        beanTeacherDaoConfig.initIdentityScope(type);

        contactParentDaoConfig = daoConfigMap.get(ContactParentDao.class).clone();
        contactParentDaoConfig.initIdentityScope(type);

        contactStudentDaoConfig = daoConfigMap.get(ContactStudentDao.class).clone();
        contactStudentDaoConfig.initIdentityScope(type);

        contactTeacherDaoConfig = daoConfigMap.get(ContactTeacherDao.class).clone();
        contactTeacherDaoConfig.initIdentityScope(type);

        beanChatDaoConfig = daoConfigMap.get(BeanChatDao.class).clone();
        beanChatDaoConfig.initIdentityScope(type);

        beanBannerDao = new BeanBannerDao(beanBannerDaoConfig, this);
        beanClassDao = new BeanClassDao(beanClassDaoConfig, this);
        beanCourseDao = new BeanCourseDao(beanCourseDaoConfig, this);
        beanDeviceTokenDao = new BeanDeviceTokenDao(beanDeviceTokenDaoConfig, this);
        beanMyClassDao = new BeanMyClassDao(beanMyClassDaoConfig, this);
        beanTeacherDao = new BeanTeacherDao(beanTeacherDaoConfig, this);
        contactParentDao = new ContactParentDao(contactParentDaoConfig, this);
        contactStudentDao = new ContactStudentDao(contactStudentDaoConfig, this);
        contactTeacherDao = new ContactTeacherDao(contactTeacherDaoConfig, this);
        beanChatDao = new BeanChatDao(beanChatDaoConfig, this);

        registerDao(BeanBanner.class, beanBannerDao);
        registerDao(BeanClass.class, beanClassDao);
        registerDao(BeanCourse.class, beanCourseDao);
        registerDao(BeanDeviceToken.class, beanDeviceTokenDao);
        registerDao(BeanMyClass.class, beanMyClassDao);
        registerDao(BeanTeacher.class, beanTeacherDao);
        registerDao(ContactParent.class, contactParentDao);
        registerDao(ContactStudent.class, contactStudentDao);
        registerDao(ContactTeacher.class, contactTeacherDao);
        registerDao(BeanChat.class, beanChatDao);
    }
    
    public void clear() {
        beanBannerDaoConfig.getIdentityScope().clear();
        beanClassDaoConfig.getIdentityScope().clear();
        beanCourseDaoConfig.getIdentityScope().clear();
        beanDeviceTokenDaoConfig.getIdentityScope().clear();
        beanMyClassDaoConfig.getIdentityScope().clear();
        beanTeacherDaoConfig.getIdentityScope().clear();
        contactParentDaoConfig.getIdentityScope().clear();
        contactStudentDaoConfig.getIdentityScope().clear();
        contactTeacherDaoConfig.getIdentityScope().clear();
        beanChatDaoConfig.getIdentityScope().clear();
    }

    public BeanBannerDao getBeanBannerDao() {
        return beanBannerDao;
    }

    public BeanClassDao getBeanClassDao() {
        return beanClassDao;
    }

    public BeanCourseDao getBeanCourseDao() {
        return beanCourseDao;
    }

    public BeanDeviceTokenDao getBeanDeviceTokenDao() {
        return beanDeviceTokenDao;
    }

    public BeanMyClassDao getBeanMyClassDao() {
        return beanMyClassDao;
    }

    public BeanTeacherDao getBeanTeacherDao() {
        return beanTeacherDao;
    }

    public ContactParentDao getContactParentDao() {
        return contactParentDao;
    }

    public ContactStudentDao getContactStudentDao() {
        return contactStudentDao;
    }

    public ContactTeacherDao getContactTeacherDao() {
        return contactTeacherDao;
    }

    public BeanChatDao getBeanChatDao() {
        return beanChatDao;
    }

}
